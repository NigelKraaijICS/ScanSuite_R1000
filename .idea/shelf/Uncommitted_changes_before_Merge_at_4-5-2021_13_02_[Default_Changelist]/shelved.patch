Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    defaultConfig {\r\n        applicationId \"nl.icsvertex.scansuite\"\r\n        minSdkVersion 19\r\n        targetSdkVersion 30\r\n        versionCode 15896\r\n        versionName \"1.5.8.96A\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        android.defaultConfig.vectorDrawables.useSupportLibrary = true\r\n        multiDexEnabled true\r\n\r\n        //for database history\r\n        javaCompileOptions {\r\n            annotationProcessorOptions {\r\n                arguments = [\"room.schemaLocation\": \"$projectDir/schemas\".toString()]\r\n            }\r\n        }\r\n    }\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    flavorDimensions(\"default\")\r\n    productFlavors {\r\n        normal {\r\n            dimension \"default\"\r\n        }\r\n    }\r\n\r\n    lintOptions {\r\n        checkReleaseBuilds false\r\n        // Or, if you prefer, you can continue to check for errors in release builds,\r\n        // but continue the build even when errors are found:\r\n        abortOnError false\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\ndependencies {\r\n\r\n    //Shimmer\r\n    implementation 'com.facebook.shimmer:shimmer:0.1.0@aar'\r\n\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.exifinterface:exifinterface:1.3.2'\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n\r\n    //Firebase\r\n\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.4.1'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.3'\r\n    implementation platform('com.google.firebase:firebase-bom:26.5.0')\r\n    implementation 'com.google.firebase:firebase-perf'\r\n\r\n\r\n    //Android X\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test:runner:1.3.0'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'com.google.code.ksoap2-android:ksoap2-android:3.6.1'\r\n\r\n    // Room components\r\n    implementation 'androidx.room:room-runtime:2.2.6'\r\n    annotationProcessor 'androidx.room:room-compiler:2.2.6'\r\n    androidTestImplementation 'androidx.room:room-testing:2.2.6'\r\n\r\n    // Lifecycle components\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.3.1'\r\n    //noinspection LifecycleAnnotationProcessorWithJava8\r\n    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.3.1'\r\n\r\n    //Images\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n\r\n    //Scanner (device)\r\n    implementation 'com.github.datalogic:datalogic-android-sdk:1.19.1'\r\n\r\n    //Zxing\r\n    implementation 'com.google.zxing:core:3.4.0'\r\n    implementation 'com.google.zxing:android-core:3.3.0'\r\n\r\n    //Circular image\r\n    implementation 'com.mikhaellopez:circularimageview:3.2.0'\r\n    implementation 'com.balysv:material-ripple:1.0.2'\r\n\r\n\r\n    //LeakCanary\r\n//    debugImplementation \"com.squareup.leakcanary:leakcanary-android:2.2\"\r\n}\r\n\r\n\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\napply plugin: 'com.google.firebase.firebase-perf'
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 814c19680fae75ac3dd99ed73e834b4f1528ba29)
+++ app/build.gradle	(date 1620125872002)
@@ -6,8 +6,8 @@
         applicationId "nl.icsvertex.scansuite"
         minSdkVersion 19
         targetSdkVersion 30
-        versionCode 15896
-        versionName "1.5.8.96A"
+        versionCode 15897
+        versionName "1.5.8.98A"
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
         android.defaultConfig.vectorDrawables.useSupportLibrary = true
         multiDexEnabled true
Index: app/src/main/java/nl/icsvertex/scansuite/Fragments/Dialogs/BranchFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package nl.icsvertex.scansuite.Fragments.Dialogs;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.DialogFragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.facebook.shimmer.ShimmerFrameLayout;\r\n\r\nimport java.util.Objects;\r\n\r\nimport ICS.Interfaces.iICSDefaultFragment;\r\nimport ICS.Utils.Scanning.cBarcodeScan;\r\nimport ICS.Utils.cRegex;\r\nimport ICS.Utils.cUserInterface;\r\nimport ICS.cAppExtension;\r\nimport SSU_WHS.Basics.BarcodeLayouts.cBarcodeLayout;\r\nimport SSU_WHS.Basics.Branches.cBranch;\r\nimport SSU_WHS.Basics.Branches.cBranchAdapter;\r\nimport SSU_WHS.Basics.Users.cUser;\r\nimport nl.icsvertex.scansuite.Activities.General.LoginActivity;\r\nimport nl.icsvertex.scansuite.R;\r\n\r\npublic class BranchFragment extends DialogFragment implements iICSDefaultFragment {\r\n\r\n    //Region Public Properties\r\n\r\n    //End Region Public Properties\r\n\r\n    //Region Private Properties\r\n    private  RecyclerView branchRecyclerview;\r\n    private  Button buttonClose;\r\n\r\n    private  ShimmerFrameLayout shimmerViewContainer;\r\n\r\n    private cBranchAdapter branchAdapter;\r\n    private  cBranchAdapter getBranchAdapter(){\r\n        if (this.branchAdapter == null) {\r\n            this.branchAdapter = new cBranchAdapter();\r\n        }\r\n\r\n        return  branchAdapter;\r\n    }\r\n\r\n    //End Region Private Properties\r\n\r\n\r\n    //Region Constructor\r\n    public BranchFragment() {\r\n\r\n    }\r\n    //End region Constructor\r\n\r\n\r\n    //Region Default Methods\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View rootview = inflater.inflate(R.layout.fragment_branch, container);\r\n        cBarcodeScan.pRegisterBarcodeFragmentReceiver(this.getClass().getSimpleName());\r\n        return rootview;\r\n    }\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        cAppExtension.dialogFragment = this;\r\n        this.mFragmentInitialize();\r\n    }\r\n\r\n    @Override\r\n    public void onPause() {\r\n        this.shimmerViewContainer.stopShimmerAnimation();\r\n        try {\r\n            cBarcodeScan.pUnregisterBarcodeFragmentReceiver(this.getClass().getSimpleName());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        super.onPause();\r\n    }\r\n    @Override\r\n    public void onDestroy() {\r\n        try {\r\n            cBarcodeScan.pUnregisterBarcodeFragmentReceiver(this.getClass().getSimpleName());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        super.onDestroy();\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n\r\n        super.onResume();\r\n        cBarcodeScan.pRegisterBarcodeFragmentReceiver(this.getClass().getSimpleName());\r\n        cUserInterface.pEnableScanner();\r\n\r\n        this.shimmerViewContainer.startShimmerAnimation();\r\n        int width = getResources().getDisplayMetrics().widthPixels;\r\n        int height = getResources().getDisplayMetrics().heightPixels - getResources().getDimensionPixelSize(R.dimen.default_double_margin);\r\n\r\n        Objects.requireNonNull(Objects.requireNonNull(getDialog()).getWindow()).setLayout(width, height);\r\n    }\r\n\r\n    //End Region Default Methods\r\n\r\n\r\n   //Region iICSDefaultFragment defaults\r\n    @Override\r\n    public void mFragmentInitialize() {\r\n        this.mFindViews();\r\n        this.mFieldsInitialize();\r\n        this.mSetListeners();\r\n    }\r\n\r\n    @Override\r\n    public void mFindViews() {\r\n        if (getView() != null) {\r\n            this.branchRecyclerview = getView().findViewById(R.id.branchRecyclerview);\r\n            this.buttonClose = getView().findViewById(R.id.buttonClose);\r\n            this.shimmerViewContainer = getView().findViewById(R.id.shimmerViewContainer);\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void mFieldsInitialize() {\r\n        this.mFillRecyclerView();\r\n    }\r\n\r\n    @Override\r\n    public void mSetListeners() {\r\n        this.mSetCloseListener();\r\n    }\r\n\r\n    //End Region iICSDefaultFragment defaults\r\n\r\n    //Region Public Methods\r\n\r\n    public void pHandleScan(cBarcodeScan pvBarcodeScan){\r\n\r\n        String barcodeWithoutPrefixStr;\r\n\r\n        //No prefix\r\n        if (!cRegex.pHasPrefix(pvBarcodeScan.getBarcodeOriginalStr())) {\r\n            this.mBranchScanned(pvBarcodeScan.getBarcodeOriginalStr());\r\n            return;\r\n        }\r\n\r\n        boolean foundBln = false;\r\n\r\n        if (cBarcodeLayout.pCheckBarcodeWithLayoutBln(pvBarcodeScan.getBarcodeOriginalStr(), cBarcodeLayout.barcodeLayoutEnu.LOCATION)) {\r\n            foundBln = true;\r\n        }\r\n\r\n        //has prefix, is branch\r\n        if (foundBln) {\r\n            barcodeWithoutPrefixStr = cRegex.pStripRegexPrefixStr(pvBarcodeScan.getBarcodeOriginalStr());\r\n            this.mBranchScanned(barcodeWithoutPrefixStr);\r\n        }\r\n        else {\r\n            //has prefix, isn't branch\r\n            cUserInterface.pDoNope(branchRecyclerview, true, true);\r\n        }\r\n    }\r\n    //End Region Public Methods\r\n\r\n    //Region Private Methods\r\n\r\n    private  void mBranchScanned(String pvBarcodeStr) {\r\n\r\n        cBranch branch = cBranch.pGetUserBranchByCode(pvBarcodeStr);\r\n        if (branch == null) {\r\n            cUserInterface.pDoNope(this.branchRecyclerview, true, true);\r\n            return;\r\n        }\r\n\r\n        if (cAppExtension.activity instanceof LoginActivity) {\r\n            cUser.currentUser.currentBranch = branch;\r\n            LoginActivity loginActivity = (LoginActivity)cAppExtension.activity;\r\n            loginActivity.pBranchSelected(branch);\r\n        }\r\n    }\r\n\r\n    private void mFillRecyclerView() {\r\n\r\n        this.branchRecyclerview.setHasFixedSize(false);\r\n        this.branchRecyclerview.setAdapter(this.getBranchAdapter());\r\n        this.branchRecyclerview.setLayoutManager(new LinearLayoutManager(cAppExtension.context));\r\n\r\n        //Stopping Shimmer Effect's animation after data is loaded\r\n        this.shimmerViewContainer.stopShimmerAnimation();\r\n        this.shimmerViewContainer.setVisibility(View.GONE);\r\n    }\r\n\r\n    private void mSetCloseListener() {\r\n        this.buttonClose.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (cAppExtension.dialogFragment != null) {\r\n                    cAppExtension.dialogFragment.dismiss();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //End Region Private Methods\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/nl/icsvertex/scansuite/Fragments/Dialogs/BranchFragment.java	(revision 814c19680fae75ac3dd99ed73e834b4f1528ba29)
+++ app/src/main/java/nl/icsvertex/scansuite/Fragments/Dialogs/BranchFragment.java	(date 1620112507723)
@@ -198,6 +198,9 @@
         //Stopping Shimmer Effect's animation after data is loaded
         this.shimmerViewContainer.stopShimmerAnimation();
         this.shimmerViewContainer.setVisibility(View.GONE);
+
+
+
     }
 
     private void mSetCloseListener() {
Index: app/release/normal/release/output-metadata.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"version\": 2,\r\n  \"artifactType\": {\r\n    \"type\": \"APK\",\r\n    \"kind\": \"Directory\"\r\n  },\r\n  \"applicationId\": \"nl.icsvertex.scansuite\",\r\n  \"variantName\": \"processNormalReleaseResources\",\r\n  \"elements\": [\r\n    {\r\n      \"type\": \"SINGLE\",\r\n      \"filters\": [],\r\n      \"versionCode\": 15895,\r\n      \"versionName\": \"1.5.8.95A\",\r\n      \"outputFile\": \"app-normal-release.apk\"\r\n    }\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/release/normal/release/output-metadata.json	(revision 814c19680fae75ac3dd99ed73e834b4f1528ba29)
+++ app/release/normal/release/output-metadata.json	(date 1619698401928)
@@ -10,8 +10,8 @@
     {
       "type": "SINGLE",
       "filters": [],
-      "versionCode": 15895,
-      "versionName": "1.5.8.95A",
+      "versionCode": 15896,
+      "versionName": "1.5.8.96A",
       "outputFile": "app-normal-release.apk"
     }
   ]
